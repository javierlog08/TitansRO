function	script	inviteToPVP	{
	set $@invitator$,strcharinfo(0);
	setarray $@name$[0],"";
	setarray $@id[0],0;
	set $@nb,0;
	if(getargcount() == 0) {
		set $@nb, query_sql("SELECT account_id, name FROM `char` WHERE online=1", $@id, $@name$);
	} else if(getargcount()>=1) {
		set $@nb,0;
		set @usersize,getarg(1);
		for(@i=0;@i<@usersize;++@i){
			if(isloggedin(getcharid(3,getelementofarray(getarg(0), @i)))) {
				set $@name$[$@nb],getelementofarray(getarg(0), @i);
				set $@id[$@nb],getcharid(3,getelementofarray(getarg(0), @i));
				set $@nb,$@nb+1;
			}
		}
	}
	set $@LAST_RID,getcharid(3);
	detachrid;
	for($@i=0; $@i < $@nb; ++$@i) {
		if($@name$[$@i]!=$@invitator$ && isloggedin($@id[$@i])) { // NI al invitador NI a personas q no esten onlin
			if(!checkmes($@id[$@i])) { //No le manda el mensaje a personas que estan en dialogo,
				attachrid $@id[$@i];
				addtimer 1,strnpcinfo(3)+"::OnGuest"; //El npc que llama el script tiene al evento OnGuest
				detachrid;
			}
		}
	}
	attachrid $@LAST_RID; //Para que sigua el flujo normal el script despues de usar esta funcion
	return;
}

function	script	F_DobleACC	{
	/*set @ip$,getcharip();
	set @nb, query_sql("select c.online from `char` c join login lo on c.account_id=lo.account_id where lo.last_ip='"+@ip$+"' and c.online=1",@online);
	if(@nb > 1)
		return 1;
	*/
	return 0;
}

//- Evita que se activen NPCs de invitaciones o la Guia en mapas no deseados
//=================================================================
function	script	checkMapFlags	{
		if(getmapflag( strcharinfo(3),mf_nowarp) ||
			getmapflag( strcharinfo(3),mf_nowarpto) ||
			getmapflag( strcharinfo(3),mf_noteleport) ||
			/*getmapflag( strcharinfo(3),mf_nomemo) || */
			getmapflag( strcharinfo(3),mf_pvp) ||
			getmapflag( strcharinfo(3),mf_nosave) ||
			getmapflag( strcharinfo(3),mf_gvg)) {
			return 1;
		}
			
		return 0;
}

//- MAPFLAG PARA INVITACIONES - Estos mapas no tenian definidos el flag nowarpto
//=============================================================================
moc_pryd06	mapflag	nowarpto
thana_boss	mapflag	nowarpto
gld_dun03_2	mapflag	nowarpto
ra_fild02	mapflag	nowarpto
ra_fild03	mapflag	nowarpto
ra_fild04	mapflag	nowarpto
ve_fild01	mapflag	nowarpto
ve_fild02	mapflag	nowarpto
lou_dun03	mapflag	nowarpto
prt_maze03	mapflag	nowarpto
bra_dun02	mapflag	nowarpto
lhz_dun04	mapflag	nowarpto
gld2_pay	mapflag	nowarpto
gld_dun04	mapflag	nowarpto
gld_dun04_2	mapflag	nowarpto
gl_chyard	mapflag	nowarpto
abyss_03	mapflag	nowarpto
gef_dun02	mapflag	nowarpto
gld_dun02	mapflag	nowarpto
gef_dun01	mapflag	nowarpto
treasure02	mapflag	nowarpto
gld_dun01	mapflag	nowarpto
gld_dun01_2	mapflag	nowarpto
pay_fild11	mapflag	nowarpto
gon_dun03	mapflag	nowarpto
abbey02	mapflag	nowarpto
xmas_fild01	mapflag	nowarpto
gld2_ald	mapflag	nowarpto
ra_san05	mapflag	nowarpto
dic_dun03	mapflag	nowarpto
prt_sewb4	mapflag	nowarpto
mosk_dun03	mapflag	nowarpto
lhz_dun04	mapflag	nowarpto
lhz_dun03	mapflag	nowarpto
thor_v03	mapflag	nowarpto
ama_dun03	mapflag	nowarpto
gld2_gef	mapflag	nowarpto
kh_dun02	mapflag	nowarpto
xmas_dun02	mapflag	nowarpto
iz_dun05	mapflag	nowarpto
ice_dun03	mapflag	nowarpto
ayo_dun02	mapflag	nowarpto
dew_dun01	mapflag	nowarpto
niflheim	mapflag	nowarpto
anthell02	mapflag	nowarpto
mjolnir_04	mapflag	nowarpto
pay_dun04	mapflag	nowarpto
moc_prydn2	mapflag	nowarpto
gef_fild02	mapflag	nowarpto
gef_fild14	mapflag	nowarpto
gef_fild10	mapflag	nowarpto
moc_pryd04	mapflag	nowarpto
in_sphinx5	mapflag	nowarpto
moc_fild17	mapflag	nowarpto
dic_dun02	mapflag	nowarpto
ein_dun02	mapflag	nowarpto
beach_dun	mapflag	nowarpto
tur_dun04	mapflag	nowarpto
odin_tem03	mapflag	nowarpto
jupe_core	mapflag	nowarpto
moc_fild22	mapflag	nowarpto
pay_fild04	mapflag	nowarpto
xmas_dun01	mapflag	nowarpto
yuno_fild03	mapflag	nowarpto
yuno_fild04	mapflag	nowarpto
thor_v03	mapflag	nowarpto
thor_v01	mapflag	nowarpto
pay_dun04	mapflag	nowarpto
gl_chyard	mapflag	nowarpto
pay_fild04	mapflag	nowarpto
yuno_fild03	mapflag	nowarpto
lhz_dun02	mapflag	nowarpto
lhz_dun01	mapflag	nowarpto
pay_fild04	mapflag	nowarpto
prt_maze03	mapflag	nowarpto
treasure02	mapflag	nowarpto
man_fild03	mapflag	nowarpto
abyss_03	mapflag	nowarpto
spl_fild03	mapflag	nowarpto

function	script	F_ValidateBG	{
	set .@WEIGHT_ERROR,1;
	set .@JOB_ERROR,2;
	set .@TIME_LIMIT_ERROR,3;
	set .@ONUSE_ERROR,4;
	set .@TEAMIN_ERROR,5;
	set .@ACCEPT,6;

	if (checkweight(1201,1) == 0) {
		return .@WEIGHT_ERROR;
	}

	if ((Class == Job_Novice) || (BaseClass == Job_SuperNovice)) {
		return .@JOB_ERROR;
	}

	if (BaseLevel < 80) {
		return .@JOB_ERROR;
	}

	set .@chk_urtime,checkquest(getarg(2),PLAYTIME); //ARgumento es el ID de kla Quest
	if ((.@chk_urtime == 0)|| (.@chk_urtime == 1)) {
		return .@TIME_LIMIT_ERROR;
	} else {
		if (.@chk_urtime == 2)
			erasequest 2070;
		set .@mapcount2,getmapusers(getarg(3)); // Argumento es el mapa del BG en juego
		if (.@mapcount2 > 0) {
			return .@ONUSE_ERROR;
		} else {
			if (getarg(0) > 0 && getarg(1) > 0) {  //argument es la variable del BG que se este trtando de utilizar por ejemplo $@FlaviusBG1,$@FlaviusBG2 
				return .@TEAMIN_ERROR;
			} else {
				return .@ACCEPT;
			}
		}
	}

	return 0;
} 

function	script	F_MessageBG	{
	switch(getarg(0)) {
			case 1:
				doevent "bg_messages::OnWeight";
			break;

			case 2:
				doevent "bg_messages::OnJob";
			break;

			case 3:
				doevent "bg_messages::OnAgain";
			break;

			case 4:
				doevent "bg_messages::OnUse";
			break;

			case 5:
				doevent "bg_messages::OnIntro";
			break;

			case 6:
				doevent "bg_messages::OnAccept";
			break;
		}
}
